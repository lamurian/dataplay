boxplot(GROWTH$VAL_u ~ GROWTH$LAB_u)
boxplot(GROWTH$VAL_u ~ GROWTH$CLAB_u)
boxplot(JKW, main = "Global HDI Growth", xlab="Country Code", ylab="Log of HDI Growth")
abline(h = median(Reduce(c, JKW), na.rm = T), col = "red")
abline(h = median(Reduce(c, SBY), na.rm = T), col = "blue")
boxplot(JKW, main = "Global HDI Growth", xlab="Country Code", ylab="Log of HDI Growth", widht=10, height=4)
boxplot(JKW, main = "Global HDI Growth", xlab="Country Code", ylab="Log of HDI Growth", widht=10, height=5)
boxplot(JKW, main = "Global HDI Growth", xlab="Country Code", ylab="Log of HDI Growth", widht=10, height=5)
jpeg('test.jpg')
boxplot(JKW, main = "Global HDI Growth", xlab="Country Code", ylab="Log of HDI Growth", widht=10, height=4)
dev.off()
?boxplot
ggplot(GROWTH, aes(x=CLAB_u, y=VAL_u)) + geom_boxplot()
ggplot(GROWTH, aes(x=CLAB_u ~ y=VAL_u)) + geom_boxplot()
ggplot(GROWTH, aes(x=LAB_u ~ y=VAL_u)) + geom_boxplot()
ggplot(GROWTH, aes(x=LAB_u, y=VAL_u)) + geom_boxplot()
ggplot(GROWTH, aes(x=CLAB_u, y=VAL_u)) + geom_boxplot()
GROWTH$CLAB_u
ggplot(GROWTH, aes_string(x=CLAB_u, y=VAL_u)) + geom_boxplot()
HDI$Country
Reduce(c, HDI$Country)
vector(HDI$Country)
HDI$Country
list(HDI$Country)
list(HDI$Country) -> test
test
Reduce(c, test)
Reduce(c, test)[1]
test[2]
test[1]
Reduce(c, test)[2]
Reduce(c, test)[3]
for (i in test) print(i)
test <- vector()
for (i in HDI$Country) test <- c(test, i)
test
test[1]
gsub("^.*?\"", test[1])
gsub("^.*?\"", "", test[1])
CNAME <- vector()                   # Empty vector to contain country name
for (i in HDI$Country) CNAME <- c(CNAME, i)
for (i in CNAME) i <- gsub("^.*?\"", "", i)
CNAME
length(CNAME)
gsub("^.*?\"", "", test[1])
test [1] <- gsub("^.*?\"", "", test[1])
test[1:2]
test[1]
test[2]
test
CNAME
CNAME
clear
CNAME
data.frame(CNAME)
JKW
dim(JWK)
dim(JKW)
length(JWK)
length(JKW)
length(JKW[[1]])
paste(c("A", "B"), collapse="")
# Preparing a new dataframe
growth_compare <- function(list_1, list_2) {
    # Vector containing country name
    CNAME <- vector()
    for (i in HDI$Country) CNAME <- c(CNAME, i)
    # Empty containers
    CLAB1 <- vector(), CLAB2 <- vector(), CLAB <- vector()
    LAB1 <- vector(), LAB2 <- vector(), LAB <- vector()
    VAL1 <- vector(), VAL2 <- vector(), VAL <- vector()
    
    # Iterators
    LEN1 <- length(list_1[[1]]); LEN2 <- length(list_2[[1]])
    for (i in 1:SIZE) {
        # For list_1
        CNAME1 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB1 <- c(CLAB1, rep(CNAME1, LEN1))
        LAB1 <- c(LAB1, rep("No. 1", LEN1))
        VAL1 <- c(VAL1, list_1[[i]])
        # For list_2
        CNAME2 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB2 <- c(CLAB2, rep(CNAME2, LEN2))
        LAB2 <- c(LAB2, rep("No. 1", LEN2))
        VAL2 <- c(VAL2, list_2[[i]])
    }
    CLAB <- c(CLAB1, CLAB2); LAB <- c(LAB1, LAB2); VAL <- c(VAL1, VAL2)
    data.frame(CLAB, LAB, VAL)
list_1 <- SBY
list_2 <- JKW
growth_compare <- function(list_1, list_2) {
    # Vector containing country name
    CNAME <- vector()
    for (i in HDI$Country) CNAME <- c(CNAME, i)
    # Empty containers
    CLAB1 <- vector(), CLAB2 <- vector(), CLAB <- vector()
    LAB1 <- vector(), LAB2 <- vector(), LAB <- vector()
    VAL1 <- vector(), VAL2 <- vector(), VAL <- vector()
    
    # Iterators
    LEN1 <- length(list_1[[1]]); LEN2 <- length(list_2[[1]])
    for (i in 1:SIZE) {
        # For list_1
        CNAME1 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB1 <- c(CLAB1, rep(CNAME1, LEN1))
        LAB1 <- c(LAB1, rep("No. 1", LEN1))
        VAL1 <- c(VAL1, list_1[[i]])
        # For list_2
        CNAME2 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB2 <- c(CLAB2, rep(CNAME2, LEN2))
        LAB2 <- c(LAB2, rep("No. 1", LEN2))
        VAL2 <- c(VAL2, list_2[[i]])
    }
    CLAB <- c(CLAB1, CLAB2); LAB <- c(LAB1, LAB2); VAL <- c(VAL1, VAL2)
    data.frame(CLAB, LAB, VAL)
}growth_compare <- function(list_1, list_2) {
    # Vector containing country name
    CNAME <- vector()
    for (i in HDI$Country) CNAME <- c(CNAME, i)
    # Empty containers
    CLAB1 <- vector(), CLAB2 <- vector(), CLAB <- vector()
    LAB1 <- vector(), LAB2 <- vector(), LAB <- vector()
    VAL1 <- vector(), VAL2 <- vector(), VAL <- vector()growth_compare <- function(list_1, list_2) {
    # Vector containing country name
    CNAME <- vector()
    for (i in HDI$Country) CNAME <- c(CNAME, i)
    # Empty containers
    CLAB1 <- vector(); CLAB2 <- vector(); CLAB <- vector()
    LAB1 <- vector(); LAB2 <- vector(); LAB <- vector()
    VAL1 <- vector(); VAL2 <- vector(); VAL <- vector()
    
    # Iterators
    LEN1 <- length(list_1[[1]]); LEN2 <- length(list_2[[1]])
    for (i in 1:SIZE) {
        # For list_1
        CNAME1 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB1 <- c(CLAB1, rep(CNAME1, LEN1))
        LAB1 <- c(LAB1, rep("No. 1", LEN1))
        VAL1 <- c(VAL1, list_1[[i]])
        # For list_2
        CNAME2 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB2 <- c(CLAB2, rep(CNAME2, LEN2))
        LAB2 <- c(LAB2, rep("No. 1", LEN2))
        VAL2 <- c(VAL2, list_2[[i]])
    }
    CLAB <- c(CLAB1, CLAB2); LAB <- c(LAB1, LAB2); VAL <- c(VAL1, VAL2)
    data.frame(CLAB, LAB, VAL)
growth_compare <- function(list_1, list_2) {
    # Vector containing country name
    CNAME <- vector()
    for (i in HDI$Country) CNAME <- c(CNAME, i)
    # Empty containers
    CLAB1 <- vector(); CLAB2 <- vector(); CLAB <- vector()
    LAB1 <- vector(); LAB2 <- vector(); LAB <- vector()
    VAL1 <- vector(); VAL2 <- vector(); VAL <- vector()
    
    # Iterators
    LEN1 <- length(list_1[[1]]); LEN2 <- length(list_2[[1]])
    for (i in 1:SIZE) {
        # For list_1
        CNAME1 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB1 <- c(CLAB1, rep(CNAME1, LEN1))
        LAB1 <- c(LAB1, rep("No. 1", LEN1))
        VAL1 <- c(VAL1, list_1[[i]])
        # For list_2
        CNAME2 <- paste(c(CNAME[i], "_1"), collapse="")
        CLAB2 <- c(CLAB2, rep(CNAME2, LEN2))
        LAB2 <- c(LAB2, rep("No. 2", LEN2))
        VAL2 <- c(VAL2, list_2[[i]])
    }
    CLAB <- c(CLAB1, CLAB2); LAB <- c(LAB1, LAB2); VAL <- c(VAL1, VAL2)
    data.frame(CLAB, LAB, VAL)
}
growth_compare(SBY, JK) -> test
growth_compare(SBY, JKW) -> test
test
ggplot(test, aes(x=CLAB, y=VAL)) + geom_boxplot()
ggplot(test, aes(x=CLAB, y=VAL)) + geom_boxplot()
P <- ggplot(HDI_R, aes(x = year)) +
    geom_line(aes(y = V79, colour = "Indonesia")) +
    labs(title = "Human Development Index",
         subtitle = "Comparison Between Indonesia and Global Population",
         x = "Years",
         y = "Human Development Index") +
    geom_ribbon(aes(ymin = lower, ymax = upper, fill = "Global HDI Range"),
                alpha = 0.3) +
    scale_colour_manual("", values = "blue") +
    scale_fill_manual("", values = "grey12")
P
rm(list=ls())
source('HDI.R')
MED1
source('HDI.R')
MED1
MED2
B
print(B)
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot()
B
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = 'coral', size = 3) +
    geom_hline(yintercept = MED2, color = 'blue', size = 3)
B
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = 'coral', size = 1) +
    geom_hline(yintercept = MED2, color = 'blue', size = 1)
B
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "maroon1", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1)
B
?facet_grid
boxplot(JKW, main = "Global HDI Growth", xlab="Country Code", ylab="Log of HDI Growth")
abline(h = median(Reduce(c, JKW), na.rm = T), col = "red")
abline(h = median(Reduce(c, SBY), na.rm = T), col = "blue")
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
facet_grid(~group, scales="free")
B
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
facet_grid(~CLAB, scales="free")
B
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
facet_wrap(~group, ncol=1, scales="free_x")
B
?facet_wrap
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
B <- ggplot(GROWTH, aes(x=CLAB, y=VAL)) +
geom_boxplot(fill=LAB) +
facet_wrap(~LAB)
GROWTH$LAB
ggplot(GROWTH, aes(x="CLAB", y="VAL", fill=LAB)) +
geom_boxplot()
ggplot(GROWTH, aes(x=CLAB, y=VAL, fill=LAB)) + geom_boxplot()
ggplot(GROWTH, aes(x=CLAB, y=VAL, fill=LAB)) + geom_boxplot() + facet_wrap(~LAB)
ggplot(GROWTH, aes(x=CLAB, y=VAL, fill=LAB)) + geom_boxplot() + facet_wrap(~LAB, ncol=1)
ggplot(GROWTH, aes(x=CLAB, y=VAL, fill=LAB)) + geom_boxplot() + facet_wrap(~CLAB, ncol=10)
ggplot(GROWTH, aes(x=CLAB, y=VAL, fill=LAB)) + geom_boxplot() + facet_wrap(~LAB, ncol=1)
B <- ggplot(GROWTH, aes(x = CLAB, y = VAL, fill = LAB)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
    facet_wrap(~LAB, ncol=1)
B
SBY
head(SBY)
ggplot(GROWTH, aes(x=LAB, y=VAL, fill=CLAB)) + geom_boxplot()
ggplot(GROWTH, aes(x=LAB, y=VAL fill=LAB)) + geom_boxplot()
ggplot(GROWTH, aes(x=LAB, y=VAL, fill=LAB)) + geom_boxplot()
ad.test(Reduce(c, JKW))
ad.test(Reduce(c, SBY))
ad.test(Reduce(c, RES_GOV))
RES_GOV
RES_GOV
ad.test(GROWTH$VAL~GROWTH$LAB)
ad.test(GROWTH$VAL)
RES_GOV[[1]]$JWK
RES_GOV[[1]]$JKW
JKW
JKW2 <- list(); JKW2 <- append(JKW2, c(1:189))
JKW2
SBY2 <- list(); SBY2 <- append(SBY2, c(1:189))
for (i in 1:189) {
JKW2[[i]] <- RES_GOV[[i]]$JKW
SBY2[[i]] <- RES_GOV[[i]]$SBY}
JKW2
SBY2
for (i in 1:189) {
SBY2
SBY
JKW2
JKW
JKW2
RES_GOV[[1]]$SBY
RES_GOV[[2]]$SBY2
wilcox.test(GROWTH$LAB~GROWTH$VAL)
wilcox.test(GROWTH$VAL~GROWTH$LAB)
rm(list=ls())
source('HDI.R')
B2
B1
P
B1
B2
B1 <- ggplot(GROWTH, aes(x = CLAB, y = VAL, fill = LAB)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
    facet_wrap(~LAB, ncol=1) +
    labs(title = "HDI Growth Rate",
         subtitle = "Global Comparison",
         x = "Country Name",
         y = "HDI Log") +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
B1
1 <- ggplot(GROWTH, aes(x = CLAB, y = VAL, fill = LAB)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
    facet_wrap(~LAB, ncol=1) +
    labs(title = "HDI Growth Rate",
         subtitle = "Global Comparison",
         x = "Country Name",
         y = "HDI Log") +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab(1:189)
P <- ggplot(HDI_R, aes(x = year)) +
    geom_line(aes(y = V79, colour = "Indonesia")) +
    labs(title = "Human Development Index",
         subtitle = "Comparison Between Indonesia and Global Population",
         x = "Years",
         y = "Human Development Index") +
    geom_ribbon(aes(ymin = lower, ymax = upper, fill = "Global HDI Range"),
                alpha = 0.3) +
    scale_colour_manual("", values = "blue") +
    scale_fill_manual("", values = "grey12") +
scale_x_continuous(breaks=seq(1990,2017,1))
P
P <- ggplot(HDI_R, aes(x = year)) +
    geom_line(aes(y = V79, colour = "Indonesia")) +
    labs(title = "Human Development Index",
         subtitle = "Comparison Between Indonesia and Global Population",
         x = "Years",
         y = "Human Development Index") +
    geom_ribbon(aes(ymin = lower, ymax = upper, fill = "Global HDI Range"),
                alpha = 0.3) +
    scale_colour_manual("", values = "blue") +
    scale_fill_manual("", values = "grey12") +
scale_x_continuous(breaks = seq(1990,2017,3))
P
B1 <- ggplot(GROWTH, aes(x = CLAB, y = VAL, fill = LAB)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
    facet_wrap(~LAB, ncol=1) +
    labs(title = "HDI Growth Rate",
         subtitle = "Global Comparison",
         x = "Country Name",
         y = "HDI Log") +
    theme(axis.text.x = element_blank())
B1
B1 <- ggplot(GROWTH, aes(x = CLAB, y = VAL, fill = LAB)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
    facet_wrap(~LAB, ncol=1) +
    labs(title = "HDI Growth Rate",
         subtitle = "Global Comparison",
         y = "HDI Log") +
    theme(axis.text.x = element_blank())
B1 <- ggplot(GROWTH, aes(x = CLAB, y = VAL, fill = LAB)) +
    geom_boxplot() +
    geom_hline(yintercept = MED1, color = "coral", size = 1) +
    geom_hline(yintercept = MED2, color = "slateblue", size = 1) +
    facet_wrap(~LAB, ncol=1) +
    labs(title = "HDI Growth Rate",
         subtitle = "Global Comparison",
         x = "Country Lists",
         y = "HDI Log") +
    theme(axis.text.x = element_blank())
B1
q()
library("ggplot2")
# Parsing dataframe
HDI <- read.csv("HDI.csv")
SIZE <- dim(HDI)[1]
# Loop to slice the years
YEARS <- vector()
for (i in 1990:2017) {
    VAR <- paste(c("X", i), collapse = "")
    YEARS <- c(YEARS, VAR)
}
# Get global value
G_VAL <- HDI[YEARS]
colnames(G_VAL) <- c(1990:2017)
# Reshaping the dataframe
HDI_R <- data.frame(rep(0, 28))
for (i in 1:SIZE) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
# Parameters for ribbon plot
LOWER <- vector(); UPPER <- vector()
for (i in 1:SIZE) {
    LOWER <- c(LOWER, min(HDI_R[i, ], na.rm = T))
    UPPER <- c(UPPER, max(HDI_R[i, ], na.rm = T))
}
HDI_R$lower <- LOWER
HDI_R$upper <- UPPER
HDI_R$year <- c(1990:2017)
length(LOWER)
length(UPPER)
dim(HDI_R)
dim(HDI)
dim(HDI)[1]
dim(HDI)[2]
dim(HDI_R)
source(HDI.R)
source('HDI.R')
HDI_R
dim(HDI_R)
dim(HDI_R)[1]
for (i in 1:HDI_R[1]) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
for (i in 1:HDI_R(1)) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
for (i in 1:dim(HDI_R)[1])) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
for (i in 1:dim(HDI_R)[1]) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
source('HDI.R')
source('HDI.R')
library("ggplot2")
# Parsing dataframe
HDI <- read.csv("HDI.csv")
SIZE <- dim(HDI)[1]
# Loop to slice the years
YEARS <- vector()
for (i in 1990:2017) {
    VAR <- paste(c("X", i), collapse = "")
    YEARS <- c(YEARS, VAR)
}
# Get global value
G_VAL <- HDI[YEARS]
colnames(G_VAL) <- c(1990:2017)
# Reshaping the dataframe
HDI_R <- data.frame(rep(0, 28))
for (i in 1:dim(HDI_R)[1]) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
# Parameters for ribbon plot
LOWER <- vector(); UPPER <- vector()
for (i in 1:SIZE) {
    LOWER <- c(LOWER, min(HDI_R[i, ], na.rm = T))
    UPPER <- c(UPPER, max(HDI_R[i, ], na.rm = T))
}
HDI_R$lower <- LOWER
HDI_R$upper <- UPPER
HDI_R$year <- c(1990:2017)
dim(LOWER)
LOWER
UPPER
# Parameters for ribbon plot
LOWER <- vector(); UPPER <- vector()
for (i in 1:dim(HDI_R)) {
    LOWER <- c(LOWER, min(HDI_R[i, ], na.rm = T))
    UPPER <- c(UPPER, max(HDI_R[i, ], na.rm = T))
}
HDI_R
dim(HDI_R)
# Reshaping the dataframe
HDI_R <- data.frame(rep(0, 28))
for (i in 1:SIZE) {
    LOCAL <- G_VAL[i, ]
    LOCAL <- Reduce(c, LOCAL)
    HDI_R[i] <- LOCAL
}
# Parameters for ribbon plot
LOWER <- vector(); UPPER <- vector()
for (i in 1:dim(HDI_R)[1]) {
    LOWER <- c(LOWER, min(HDI_R[i, ], na.rm = T))
    UPPER <- c(UPPER, max(HDI_R[i, ], na.rm = T))
}
HDI_R$lower <- LOWER
HDI_R$upper <- UPPER
HDI_R$year <- c(1990:2017)
# Comparison Plot
P <- ggplot(HDI_R, aes(x = year)) +
    geom_line(aes(y = V79, colour = "Indonesia")) +
    labs(title = "Human Development Index",
         subtitle = "Comparison Between Indonesia and Global Population",
         x = "Years",
         y = "Human Development Index") +
    geom_ribbon(aes(ymin = lower, ymax = upper, fill = "Global HDI Range"),
                alpha = 0.3) +
    scale_colour_manual("", values = "blue") +
    scale_fill_manual("", values = "grey12") +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
source('HDI.R')
P
B2
B1
q()
